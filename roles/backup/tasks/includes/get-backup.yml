---
- name: Create full binary backup dump on RouterOS Device
  community.routeros.command:
    commands:
      - >-
        /system backup save
        {% if not backup_binary_dump.is_encrypted and backup_binary_dump.password is not defined %} dont-encrypt=yes {% endif %}
        {% if backup_binary_dump.password is defined %} password={{ backup_binary_dump.password }} {% endif %} name={{ identity }}
  when: backup_type == "backup"

- name: Create export on RouterOS Device
  community.routeros.command:
    commands:
      - /export  {% if backup_export_config.is_sensitive %}show-sensitive terse{% endif %} file={{ identity }}
  when: backup_type == "export"

- name: Get export file
  ansible.netcommon.net_get:
    src: "{{ identity }}.{{ backup_common.extension }}"
    dest: "{{ full_export_path }}"
    protocol: sftp
  when: full_export_path is defined and full_export_path | length > 0

- name: Encrypt backup file with GPG
  ansible.builtin.command: >
    gpg -e -a -r {{ backup_encryption.gpg_key_email }} --passphrase {{ backup_encryption.gpg_secret_key }} {{ full_export_path }}
  delegate_to: localhost
  register: gpg_result
  changed_when:
    - gpg_result.rc == 0
    - gpg_result.stdout | length > 0
  when:
    - backup_encryption.is_enabled | bool
    - backup_encryption.gpg_key_email | length > 0
    - backup_encryption.gpg_secret_key | length > 0

- name: Remove source file if exists after encryption
  ansible.builtin.command: rm -f "{{ full_export_path }}"
  args:
    removes: "{{ full_export_path }}"
  delegate_to: localhost
  when:
    - backup_encryption.is_enabled|bool
    - backup_encryption.gpg_key_email | length > 0
    - backup_encryption.gpg_secret_key | length > 0
