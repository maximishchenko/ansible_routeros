---
- name: Create full binary backup dump on RouterOS Device
  routeros_command:
    commands:
      - /system backup save {% if not backup.is_encrypted and backup.password is not defined %} dont-encrypt=yes {% endif %} {% if backup.password is defined %} password={{ backup.password }} {% endif %} name={{ identity }}
  when: backup_type == "backup"

- name: Create export on RouterOS Device
  routeros_command:
    commands:
      - /export  {% if export.is_sensitive %}show-sensitive terse{% endif %} file={{ identity }}
  when: backup_type == "export"

- name: Get export file
  ansible.netcommon.net_get:
    src: "{{ identity }}.{{ backup_common.extension }}"
    dest: "{{ full_export_path }}"
    protocol: sftp
  when: full_export_path is defined and full_export_path | length > 0

- name: Encrypt backup file with GPG
  command: >
    gpg -e -a -r {{ backup_encryption.gpg_key_email }} --passphrase {{ backup_encryption.gpg_secret_key }} {{ full_export_path }}
  delegate_to: localhost
  when: backup_encryption.encrypt_with_gpg|bool == True and backup_encryption.gpg_key_email | length > 0 and backup_encryption.gpg_secret_key | length > 0

- name: Remove source file if exists after encryption
  ansible.builtin.command: rm -f "{{ full_export_path }}"
  args:
    removes: "{{ full_export_path }}"
  delegate_to: localhost
  when: backup_encryption.encrypt_with_gpg|bool == True and backup_encryption.gpg_key_email | length > 0 and backup_encryption.gpg_secret_key | length > 0
